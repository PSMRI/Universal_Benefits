name: Build and Deploy to DEV EKS

on:
  push:
    branches:
      - features.benefitcreateupdate  # Trigger on push to the main branch
  pull_request:
    branches:
      - features.benefitcreateupdate  # Trigger on PR to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up AWS CLI (hardcoded AWS credentials)
      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id AKIA23WHUJCYTHNEENXD
          aws configure set aws_secret_access_key 2zr+YHEbapceKpwfo475i17q1AH/XPC1nm4Nf+70
          aws configure set region ap-south-1  # Change region to your region

      # Step 3: Set up kubectl for EKS
      - name: Set up kubectl for EKS
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name dev-piramal
          kubectl version --client # Verify kubectl is installed

      # Step 4: Set up Docker Hub credentials (hardcoded Docker Hub credentials)
      - name: Set up Docker Hub credentials
        run: |
          echo "Devops@1997" | docker login --username prsm323 --password-stdin
          
      # Step 5: Build Docker image
      - name: Build Docker image
        run: |
          # Generate the image tag using date and time
          IMAGE_TAG="v1.0.0-$(date +'%Y%m%d-%H%M%S')"
          echo "Building Docker image with tag: $IMAGE_TAG"
          
          # Build the Docker image with the new tag
          docker build -t prsm323/application:$IMAGE_TAG ./backend/application  # Path to Dockerfile is correct

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          IMAGE_TAG="v1.0.0-$(date +'%Y%m%d-%H%M%S')"  # Use the same tag format as in Step 5
          echo "Pushing Docker image with tag: $IMAGE_TAG"
          docker push prsm323/application:$IMAGE_TAG

      # Step 7: Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version # Verify Helm is installed

      # Step 8: Clone external repository containing the Helm chart and values file
      - name: Clone the DIGIT-DevOps repository
        run: |
          git clone --branch DIGIT-2.9LTS https://github.com/Ramesh-Kumhar/DIGIT-DevOps.git

      # Step 9: Ensure Helm chart path exists
      - name: Ensure Helm chart path exists
        run: |
          if [ ! -d "./DIGIT-DevOps/deploy-as-code/charts/uba/backend/application" ]; then
            echo "Helm chart directory not found!"
            exit 1
          fi
          if [ ! -f "./DIGIT-DevOps/deploy-as-code/charts/uba/backend/application/values.yaml" ]; then
            echo "Values file not found!"
            exit 1
          fi

      # Step 10: Update the values.yaml file with the new tag
      - name: Update values.yaml with new tag
        run: |
          IMAGE_TAG="v1.0.0-$(date +'%Y%m%d-%H%M%S')"  # Use the same tag format here
          echo "Updating values.yaml with tag $IMAGE_TAG"
          
          # Install yq (a lightweight command-line YAML processor)
          curl -s https://raw.githubusercontent.com/mikefarah/yq/v4.15.1/install_linux_amd64.tar.gz | tar xz -C /usr/local/bin
          
          # Replace the tag field in values.yaml with the new image tag
          yq e '.image.tag = str(env(IMAGE_TAG))' -i ./DIGIT-DevOps/deploy-as-code/charts/uba/backend/application/values.yaml

      # Step 11: Deploy to EKS using Helm
      - name: Deploy to EKS using Helm
        run: |
          IMAGE_TAG="v1.0.0-$(date +'%Y%m%d-%H%M%S')"  # Use the same tag format here
          helm upgrade --install backend ./DIGIT-DevOps/deploy-as-code/charts/uba/backend/application \
            --set backend.image.repository=prsm323/application \
            --set backend.image.tag=$IMAGE_TAG \
            -f ./DIGIT-DevOps/deploy-as-code/charts/uba/backend/application/values.yaml
